{"version":3,"sources":["logo.svg","Drawings/Stars.js","App.js","reportWebVitals.js","index.js"],"names":["Array","map","_","i","id","toString","x","Math","random","window","innerWidth","y","innerHeight","rotation","isDragging","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,kCCIN,YAAIA,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CACnCC,GAAID,EAAEE,WACNC,EAAGC,KAAKC,SAAWC,OAAOC,WAC1BC,EAAGJ,KAAKC,SAAWC,OAAOG,YAC1BC,SAA0B,IAAhBN,KAAKC,SACfM,YAAY,M,MCGDC,MARf,WACE,OACE,qBAAKC,UAAU,KAAf,SACE,gDCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10ced788.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Stage, Layer, Star, Text } from 'react-konva';\r\n\r\nfunction generateShapes() {\r\n  return [...Array(10)].map((_, i) => ({\r\n    id: i.toString(),\r\n    x: Math.random() * window.innerWidth,\r\n    y: Math.random() * window.innerHeight,\r\n    rotation: Math.random() * 180,\r\n    isDragging: false,\r\n  }));\r\n}\r\n\r\nconst INITIAL_STATE = generateShapes();\r\n\r\nexport default function Stars() {\r\n  const [stars, setStars] = React.useState(INITIAL_STATE);\r\n\r\n  const handleDragStart = (e) => {\r\n    const id = e.target.id();\r\n    setStars(\r\n      stars.map((star) => {\r\n        return {\r\n          ...star,\r\n          isDragging: star.id === id,\r\n        };\r\n      })\r\n    );\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    setStars(\r\n      stars.map((star) => {\r\n        return {\r\n          ...star,\r\n          isDragging: false,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Stage width={window.innerWidth} height={window.innerHeight}>\r\n      <Layer>\r\n        <Text text=\"Try to drag a star\" />\r\n        {stars.map((star) => (\r\n          <Star\r\n            key={star.id}\r\n            id={star.id}\r\n            x={star.x}\r\n            y={star.y}\r\n            numPoints={5}\r\n            innerRadius={20}\r\n            outerRadius={40}\r\n            fill=\"#89b717\"\r\n            opacity={0.8}\r\n            draggable\r\n            rotation={star.rotation}\r\n            shadowColor=\"black\"\r\n            shadowBlur={10}\r\n            shadowOpacity={0.6}\r\n            shadowOffsetX={star.isDragging ? 10 : 5}\r\n            shadowOffsetY={star.isDragging ? 10 : 5}\r\n            scaleX={star.isDragging ? 1.2 : 1}\r\n            scaleY={star.isDragging ? 1.2 : 1}\r\n            onDragStart={handleDragStart}\r\n            onDragEnd={handleDragEnd}\r\n          />\r\n        ))}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n}","import logo from \"./logo.svg\";\r\nimport Stars from \"./Drawings/Stars\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='tc'>\r\n      <h1>Hello World</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport tachyons from 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}